name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  simulation:
    name: "Simulation framework"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - fdb_version: "7.3.27"
            fdb_rs_feature_version: "fdb-7_3,fdb-docker"
            rustflags: "-C linker=clang"
            rustc_linker: "clang"
          - fdb_version: "7.1.57"
            fdb_rs_feature_version: "fdb-7_1"
            rustflags: ""
            rustc_linker: ""
    steps:
      - name: disk space
        run: df -h /

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          overprovision-lvm: 'true'

      - name: disk space
        run: df -h /

      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: docker build
        run: docker build --build-arg FDB_VERSION=${{ matrix.fdb_version }} --build-arg FDB_RS_FEATURE_VERSION=${{ matrix.fdb_rs_feature_version }} --build-arg RUSTFLAGS='${{ matrix.rustflags }}' --build-arg RUSTC_LINKER='${{ matrix.rustc_linker }}' -t simulation:${{ matrix.fdb_version }} . -f foundationdb-simulation/examples/atomic/Dockerfile

      - name: docker run
        run: docker run --rm simulation:${{ matrix.fdb_version }}

  compatibility:
    name: "Compat ${{ matrix.os }}/${{ matrix.toolchain }}/${{ matrix.fdb_feature_version }}"

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-13", "macos-14"]
        toolchain: ["1.82.0", "stable"]
        fdb_feature_version: ["fdb-7_3", "fdb-7_1", "fdb-7_0", "fdb-6_3", "fdb-6_2", "fdb-6_1"]

    runs-on: ${{ matrix.os }}

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Setup FoundationDB
        uses: foundationdb-rs/foundationdb-actions-install@v2.3.0
        with:
          version: "7.3.27"

      - name: Enable tenant
        run: fdbcli --exec "configure single memory tenant_mode=optional_experimental"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: Build
        run: cargo build --verbose -p foundationdb --no-default-features --features ${{ matrix.fdb_feature_version }}

      - name: Test
        # Examples needs to have uuid enabled
        run: cargo test --verbose -p foundationdb --no-default-features --features ${{ matrix.fdb_feature_version }},uuid


  test:
    name: "Test foundationDB with ${{ matrix.toolchain }}"
    strategy:
      matrix:
        toolchain: ["1.82.0", "stable", "beta", "nightly"]

    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Install FoundationDB
        uses: foundationdb-rs/foundationdb-actions-install@v2.3.0
        with:
          version: "7.3.27"

      - name: Enable tenant
        run: fdbcli --exec "configure single memory tenant_mode=optional_experimental"

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "${{ matrix.toolchain }}"
          components: rustfmt, clippy

      - name: Run all tests
        run: cargo test -p foundationdb --features num-bigint,embedded-fdb-include,tenant-experimental,fdb-7_3

  lint:
    name: Rustfmt / Clippy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Install FoundationDB
        uses: foundationdb-rs/foundationdb-actions-install@v2.3.0
        with:
          version: "7.3.27"

      - name: Enable tenant
        run: fdbcli --exec "configure single memory tenant_mode=optional_experimental"

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Fmt
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --features num-bigint,embedded-fdb-include,tenant-experimental,fdb-7_3 --no-default-features

  audit:
    name: Cargo audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Install FoundationDB
        uses: foundationdb-rs/foundationdb-actions-install@v2.3.0
        with:
          version: "7.1.37"
      - uses: rustsec/audit-check@v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
