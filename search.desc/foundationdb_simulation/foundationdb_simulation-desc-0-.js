searchState.loadedDescShard("foundationdb_simulation", 0, "foundationdb-simulation\nRust representation of a simulated FoundationDB database\ndebug\nerror, this severity automatically breaks execution\nThe runtime FDB_API_VERSION to use\nThe runtime FDB_API_VERSION to use\ninfo\nA single metric entry\nWrapper around the C FDBMetrics\nEquivalent to the C++ abstract class <code>FDBWorkload</code>\nEquivalent to the C++ abstract class <code>FDBWorkloadFactory</code>\nIndicates the severity of a FoundationDB log entry\nAutomatically implements a WorkloadFactory for a single …\nwarn\nwarn always\nWrapper around the C FDBWorkloadContext\nRust representation of a FoundationDB workload\nCreate a metric average entry\nIndicates if the value represents an average or not\nThis method is called when the tester completes. A …\nGet the client id of the workload\nGet the client id of the workload\nIf the test file contains a key-value pair workloadName …\nMacro that can be used to create log “details” more …\nPush several Metric entries in the underlying C++ sink\nC++ string formatter of the metric\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSet the check timeout in simulated seconds for this …\nIf a workload collects metrics (like latencies or …\nGet the value of a parameter from the simulation config …\nGet the process id of the workload\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the metric\nThe implicit WorkloadFactory will call this method uppon …\nGet the current simulated time in seconds (starts at zero)\nPush a Metric entry in the underlying C++ sink\nRegister a RustWorkloadFactory. /!\\ Should be called only …\nRegister a SingleRustWorkload and creates an implicit …\nCall std::vector::reserve on the underlying C++ sink\nGet a determinist 32-bit random number\nSet the process id of the workload\nThis method is called by the tester during the setup phase.\nGet a determinist 64-bit random number\nThis method should run the actual test.\nAdd a log entry in the FoundationDB logs\nCreate a metric value entry\nThe value of the metric")