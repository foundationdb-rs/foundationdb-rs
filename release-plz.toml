[workspace]
# https://release-plz.ieni.dev/docs/config#the-release_always-field
# If false, release-plz release will try to release your packages only when you merge the release PR.
# To do this, release-plz checks if the latest commit is associated to a release PR. To determine if a PR is a release-pr
release_always = false

git_release_draft = true
pr_draft = true
pr_labels = ["release"]

# As we cannot regenerate the whole CHANGELOG, we fallback to cliff
# https://github.com/MarcoIeni/release-plz/issues/1009
changelog_config = "cliff.toml"

# https://release-plz.dev/docs/config#the-features_always_increment_minor-field
# If true, feature commits always increment the minor version, even in 0.x releases.
# This is particularly important for FoundationDB protocol version additions (e.g., fdb-7_4, fdb-7_5),
# which represent significant changes that deserve minor version bumps rather than patch updates.
# This reserves patch versions for bug fixes only.
# Note: This violates Cargo SemVer rules where 0.x -> 0.(x+1) is used for breaking changes.
features_always_increment_minor = true

# https://release-plz.dev/docs/config#the-dependencies_update-field
# If true, update all dependencies in Cargo.lock by running `cargo update`.
# If false, only update workspace packages by running `cargo update --workspace`.
dependencies_update = true

[[package]]
name = "foundationdb-macros"

[[package]]
name = "foundationdb-sys"
publish_features = ["embedded-fdb-include", "fdb-7_3"]

[[package]]
name = "foundationdb-gen"

[[package]]
name = "foundationdb-tuple"
publish_features = ["uuid", "num-bigint"]

[[package]]
name = "foundationdb"
publish_features = ["embedded-fdb-include", "fdb-7_3", "uuid"]

[[package]]
name = "foundationdb-simulation"
publish_features = ["embedded-fdb-include", "fdb-7_3"]

[[package]]
name = "foundationdb-bench"
publish = false
git_release_enable = false
changelog_update = false

[[package]]
name = "bindingtester"
publish = false
git_release_enable = false
changelog_update = false